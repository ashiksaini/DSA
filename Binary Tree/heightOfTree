/**
  */

#include <bits/stdc++.h>

using namespace std;

struct Node {
	int data; 
	Node *left, *right;
	
	Node(int x) {
		data = x;
		left = right = NULL;
	}
};

Node *createTree() {
	// tree creation
	Node *root = new Node(10);
	root->left = new Node(20);
	root->right = new Node(30);
	root->left->left = new Node(40);
	root->left->right = new Node(50);
	root->left->right->left = new Node(80);
	root->right->right = new Node(60);
	root->right->right->left = new Node(70);
	root->right->right->left->right = new Node(90);
	
	return root;
}

int heightOfTree(Node *root) {
	if(root == NULL)		return 0;
	
	return max(heightOfTree(root->left), heightOfTree(root->right)) + 1;
}

void printKthNode(Node *root, int k) {
	if(root == NULL) 	return;
	
	else if(k == 0)		cout << root->data << " ";
	
	else {
		printKthNode(root->left, k - 1);
		printKthNode(root->right, k - 1);
	} 
}

int main() {
	
	Node *root = createTree();
	
	// height of the tree
	cout << "Height of the tree : " << heightOfTree(root);
	
	
	// print k distance Node from root in the tree
	int k;
	cout << "\nEnter number : "; 	cin >> k;
	
	cout << "\nK dist. Node : ";
	printKthNode(root, k);
	
	return 0;
}
