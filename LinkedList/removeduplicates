82. Remove Duplicates from Sorted List II
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == NULL) {
            return head;
        }   
        
        ListNode* prev = NULL;
        ListNode* curr = head;
        
        while(curr != NULL && curr->next != NULL) {
            if(curr->val == curr->next->val) {
                ListNode* temp = curr;
                while(temp != NULL && temp->val == curr->val) {
                    temp = temp->next;
                }
                
                if(prev != NULL) {
                    prev->next = temp;
                } else {
                    head = temp;
                }
                
                curr = temp;
                
            } else {
                prev = curr;
                curr = curr->next;
            }
        }
        
        return head;
    }
};
